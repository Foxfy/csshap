import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;

public class NumericToThaiConverter {

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            JFrame frame = new JFrame("Numeric to Thai Converter");
            frame.setSize(450, 450);
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

            JPanel panel = new JPanel();
            JTextField textField = new JTextField(10);
            JButton convertButton = new JButton("Convert");
            JLabel resultLabel = new JLabel();

            // Set font for Thai characters
            Font thaiFont = new Font("Tahoma", Font.PLAIN, 14);
            textField.setFont(thaiFont);
            convertButton.setFont(thaiFont);
            resultLabel.setFont(thaiFont);

            convertButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    String inputText = textField.getText();
                    try {
                        double numericValue = Double.parseDouble(inputText);
                        String thaiWords = convertToThaiWords(numericValue);
                        resultLabel.setText(thaiWords);
                    } catch (NumberFormatException ex) {
                        resultLabel.setText("Invalid input. Please enter a numeric value.");
                    }
                }
            });

            panel.add(new JLabel("Enter numeric value: "));
            panel.add(textField);
            panel.add(convertButton);
            panel.add(new JLabel("Result in Thai: "));
            panel.add(resultLabel);

            frame.add(panel);
            frame.setVisible(true);
        });
    }

    private static String convertToThaiWords(double numericValue) {
        String[] thaiNumerals = {"", "หนึ่ง", "สอง", "สาม", "สี่", "ห้า", "หก", "เจ็ด", "แปด", "เก้า"};

        long intValue = (long) numericValue;
        String thaiWords = convertIntegerToThaiWords(intValue, thaiNumerals);

        // Handle decimal part if present
        double decimalPart = numericValue - intValue;
        if (decimalPart > 0) {
            thaiWords += " จุด " + convertDecimalToThaiWords(decimalPart, thaiNumerals);
        }

        return thaiWords;
    }

    private static String convertIntegerToThaiWords(long intValue, String[] thaiNumerals) {
        if (intValue == 0) {
            return thaiNumerals[0];
        }

        if (intValue < 10) {
            return "หนึ่ง" + getDigitPositionWord(0); // Ed's name for units digit
        }

        StringBuilder thaiWords = new StringBuilder();
        int digitPosition = 0;

        while (intValue > 0) {
            long digit = intValue % 10;
            if (digit > 0) {
                if (digitPosition == 1 && digit == 1) {
                    thaiWords.insert(0, "สิบ ");
                } else {
                    thaiWords.insert(0, thaiNumerals[(int) digit] + getDigitPositionWord(digitPosition) + " ");
                }
            }
            intValue /= 10;
            digitPosition++;
        }

        return thaiWords.toString().trim();
    }

    private static String convertDecimalToThaiWords(double decimalPart, String[] thaiNumerals) {
        StringBuilder thaiWords = new StringBuilder();

        DecimalFormat decimalFormat = new DecimalFormat("0.#################");
        String decimalString = decimalFormat.format(decimalPart);

        for (char digitChar : decimalString.substring(2).toCharArray()) {
            int digit = Character.getNumericValue(digitChar);
            thaiWords.append(thaiNumerals[digit]).append(" ");
        }

        return thaiWords.toString().trim();
    }

    private static String getDigitPositionWord(int digitPosition) {
        return (digitPosition % 2 == 0) ? "สิบ" : "";
    }
}
